/*global jQuery */
/*jshint globalstrict: true*/
'use strict';

jQuery.fn.exists = function () {
    return this.length !== 0;
}

var ufal = ufal || {};
var console = window.console || {
        log: function () {
        }
    };

jQuery(document)
    .ready(    		        		
    function () {
    ufal.handle_interviews();
        ufal.click_event = ufal.click_event || jQuery.fn.tap ? "tap" : "click";    	    	    	
    	
    	// inform users that cookies are not being used to gather information unnecessarily.
    	if(!ufal.utils.isCookieEqual("cookie-message", "hide")) {
    		var footer = jQuery("<div id='cookie-div' style='z-index: 100; position: fixed; bottom: 0; width: 100%; background-color: #C0C0C0; opacity: 0.9; border-top: 1px solid #C0C0C0; display: none;'>" +
    					"<div class='container' style='padding: 10px; font-weight: bold; color: #333333;'>" +
    						"<div class='col-md-6 col-md-offset-1' style='padding: 2px; font-size: 110%;'>" +    						
    						$.i18n._("autocomplete-cookie-help") +
    						"</div>" +
    						"<div class='col-md-4'>" +
    							"<a id='hide-cookie-div' class='btn btn-default' href='#' style='margin-right: 10px; color: #333333;'><strong>" +
    							$.i18n._("autocomplete-cookie-understand") +
    							"</strong></a>" +
    							"<a class='btn btn-default' style='color: #333333;' href='" + ufal.utils.get_dspace_url() +"page/cookies'><strong>" +
    							$.i18n._("autocomplete-cookie-more-info") +
    							"</strong></a>" +
    						"</div>" +
    					"</div>" +
    				"</div>");
    		jQuery("body").append(footer);
    		jQuery("#cookie-div").slideDown({
    			start: function() {
    				jQuery("#cookie-div").show();
    			}
    		});
    		jQuery("#hide-cookie-div").on(ufal.click_event, function() {
			var date = new Date();
			date.setYear(date.getFullYear() + 1);
    			document.cookie = "cookie-message=hide;expires=" + date.toUTCString() + ";path=" + new URL(ufal.utils.get_dspace_url()).pathname;
    			jQuery("#cookie-div").hide();
    		});
    	}
        
        jQuery("#aspect_eperson_LoginChooser_list_login-options .signon").click();    	

        var downloadLink = ufal.utils.getQueryParameter("download");
        if (downloadLink != null) {
            window.location = decodeURIComponent(downloadLink);
        }

        ufal.utils.handle_side_menu();
        ufal.utils.initialize_layer_slider();
        ufal.utils.handle_broken_images();
        ufal.utils.handle_static_pages_js();
        ufal.utils.basic_functions();
        ufal.utils.handle_modals();

        ufal.search.handle_filters();

        ufal.browse.handle_date_input();

        ufal.utils.replaced_files_and_versions();

        jQuery("[data-toggle='tooltip']").tooltip();

        // I agree button in license agreement should be large
        jQuery(
            "#cz_cuni_mff_ufal_UFALLicenceAgreement_field_confirm_license")
            .addClass("btn btn-large btn-block");

        jQuery('.linkify').each(function (index) {
            ufal.utils.linkify(this);
        });

        jQuery("#cz_cuni_mff_ufal_dspace_app_xmlui_aspect_statistics_GAStatisticsTransformer_field_start_date")
            .datepicker({
                autoclose: true,
                format: 'yyyy-mm-dd',
                forceParse: false
            });

        jQuery("#cz_cuni_mff_ufal_dspace_app_xmlui_aspect_statistics_GAStatisticsTransformer_field_end_date")
            .datepicker({
                autoclose: true,
                format: 'yyyy-mm-dd',
                forceParse: false
            });

        jQuery("#cz_cuni_mff_ufal_dspace_app_xmlui_aspect_statistics_GAStatisticsTransformer_field_update_range")
            .on(ufal.click_event, function () {
                var sDate = jQuery("#cz_cuni_mff_ufal_dspace_app_xmlui_aspect_statistics_GAStatisticsTransformer_field_start_date").attr("value");
                var eDate = jQuery("#cz_cuni_mff_ufal_dspace_app_xmlui_aspect_statistics_GAStatisticsTransformer_field_end_date").attr("value");
                var url = window.location["href"].replace(window.location["search"], "");
                window.location = url + '?start=' + sDate + '&end=' + eDate;
            });

        if (jQuery("#aspect_administrative_ControlPanel_cell_DEL_COL")) {
            var delCol = jQuery("#aspect_administrative_ControlPanel_cell_DEL_COL");
            jQuery(delCol).append("<input type='checkbox' class='selectall'>");
            jQuery(".selectall").on(ufal.click_event, function () {
                var val = jQuery(this)[0].checked;
                jQuery(".todelete input[type='checkbox']").each(function () {
                    jQuery(this)[0].checked = val;
                });
            });
        }


		
		if(jQuery(".add-service-url")) {
			jQuery(".add-service-url").on(ufal.click_event, function() {
            	var service_div = jQuery(this).parents(".caption")[0];
                var count_input = jQuery("input[name$='_url_count']", service_div)[0];
                var count = parseInt(count_input.value);
                var newRow = jQuery(jQuery("tr", service_div)[count]).clone();
                var input1 = jQuery("input[name$='url_key_" + count + "']", newRow)[0];
                var input2 = jQuery("input[name$='url_value_" + count + "']", newRow)[0];
                input1.name = input1.name.replace(count, count+1);
                input2.name = input2.name.replace(count, count+1);
                input1.value = "";
                input2.value = "";
                newRow.insertAfter(jQuery(jQuery("tr", service_div)[count]));
                count_input.value = count+1;
                return false;
            });					
		}

        jQuery('a[data-href]').each(function(index, anchor){
            anchor = jQuery(anchor);
            anchor.attr('href', anchor.attr('data-href'))
        });

        var clipboard = new Clipboard('.repo-copy-btn');
        clipboard.on('success',   function(e){
              var tooltip = $('<span class="repo-copy-btn-tooltip" style="display: none">Copied!</span>').appendTo($(e.trigger));
              tooltip.fadeIn('slow');
              setTimeout(function () {
                tooltip.fadeOut('slow');
                tooltip.remove();
              }, 1000);
              e.clearSelection();
        });

        jQuery(".select2").each(function () {
            jQuery(this).select2({
                placeholder: 'Please select value',
                allowClear: true
            });
        });


        jQuery("#search_toggle").change(function(){
            var mainForm = jQuery("#aspect_discovery_SimpleSearch_div_main-form")
            var hiddenShowNarrators = mainForm.find("#aspect_discovery_SimpleSearch_field_showNarrators")
            if(jQuery(this).prop('checked')){
                hiddenShowNarrators.val("true")
            }else {
                hiddenShowNarrators.val("false")
            }
            mainForm.submit()
        })



	});

//
//
//

ufal.utils = {

    handle_side_menu: function () {

        jQuery("#showhidemenu").on(ufal.click_event, function () {
            jQuery("#main-contents").toggleClass("hidden-xs");
            jQuery("#options-menu").toggleClass("hidden-xs");
            jQuery(".jumbotron").toggleClass("hidden-xs");
        });

        jQuery("#menu-toggler").on(ufal.click_event, function () {
            jQuery("#sidebar").toggleClass("display");
            jQuery(this).toggleClass("display");
            return false;
        });
        var b = jQuery("#sidebar").hasClass("menu-min");
        jQuery("#sidebar-collapse").on(
            ufal.click_event,
            function () {
                jQuery("#sidebar").toggleClass("menu-min");
                jQuery(this).find('[class*="icon-"]:eq(0)').toggleClass(
                    "icon-double-angle-right");
                b = jQuery("#sidebar").hasClass("menu-min");
                if (b) {
                    jQuery(".open > .submenu").removeClass("open");
                }
            });
        var a = "ontouchend" in document;
        jQuery(".nav-list")
            .on(
            ufal.click_event,
            function (g) {
                var f = jQuery(g.target).closest("a");
                if (!f || f.length === 0) {
                    return;
                }
                if (!f.hasClass("dropdown-toggle")) {
                    if (b
                        && ufal.click_event === "tap"
                        && f.get(0).parentNode.parentNode === this) {
                        var h = f.find(".menu-text").get(0);
                        if (g.target !== h
                            && !jQuery.contains(h, g.target)) {
                            return false;
                        }
                    }
                    return;
                }
                var d = f.next().get(0);
                if (!jQuery(d).is(":visible")) {
                    var c = jQuery(d.parentNode).closest("ul");
                    if (b && c.hasClass("nav-list")) {
                        return;
                    }
                    c
                        .find("> .open > .submenu")
                        .each(
                        function () {
                            if (this !== d
                                && !jQuery(
                                    this.parentNode)
                                    .hasClass(
                                    "active")) {
                                jQuery(this).slideUp(
                                    200).parent()
                                    .removeClass(
                                    "open");
                            }
                        });
                }
                if (b
                    && jQuery(d.parentNode.parentNode)
                        .hasClass("nav-list")) {
                    return false;
                }
                jQuery(d).slideToggle(200).parent().toggleClass(
                    "open");
                return false;
            });
    },

    initialize_layer_slider: function () {
        if (jQuery('#layerslider').length > 0) {
            jQuery(".carousel").carousel();
            jQuery(".home-search").focus();
        }
    },

    handle_broken_images: function () {
        jQuery("img[alt!='Icon']").error(function () {
            jQuery(this).css("display", "none");
        });
    },

    handle_static_pages_js: function () {
        jQuery(".helpdesk-tolink").each(function () {
            jQuery(this).attr("href", jQuery(".helpdesk").attr("href"));
        });
    },

    handle_modals: function () {

        if (jQuery('#userbox').length > 0) { // user logged in
            jQuery("#download-all-button").css("visibility", "visible");
        }

    },

    basic_functions: function () {
        //
        jQuery(".hide-parent").each(function () {
            ufal.utils.hide_parent(jQuery(this));
        });
    },

    hide_parent: function (obj) {
        obj.parent().hide();
    },

    linkify: function (obj) {
        var text = jQuery(obj).html();
        var exp = /(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig;
        var emailexp = /([a-z0-9_+.%-]+@[a-z0-9.-]+\.[a-z]{2,6})/gi;
        text = text.replace(exp, "<a target='_blank' href='$1'>$1</a>")
            .replace(emailexp, "<a href='mailto:$1'>$1</a>");
        jQuery(obj).html(text);
    },

    ajax_json: function (url) {
        var data = {};
        jQuery.ajax({
            type: 'GET',
            url: url,
            dataType: 'json',
            success: function () {
            },
            data: {},
            async: false
        }).fail(function (jqXHR, textStatus) {
            console.log("lindat/utils failed to load data: " + textStatus);
        }).done(function (d) {
            data = d;
        });
        if (data == null) {
            console.log("lindat/utils failed to load data: did not get json");
        }
        return data;
    },

    swap_map: function (json) {
        var ret = {};
        for (var key in json) {
            ret[json[key]] = key;
        }
        return ret;
    },

    get_dspace_url: function () {
        var url = document.URL.substr(0, document.URL.search('/xmlui/?'))
            + '/xmlui/';
        return url;
    },

    getQueryParameter: function (str) {
        var queryParams = document.location.search.replace(/(^\?)/, '').split("&").map(function (n) {
            return n = n.split("="), this[n[0]] = n[1], this
        }.bind({}))[0];
        return queryParams[str];
    },

    isCookieExist: function (cname) {
    	var value = ufal.utils.getCookie(cname);
    	if (value != "") {
    		return true;
    	} else {
    		return false;
    	}
    },
    
    isCookieEqual: function (cname, cvalue) {
    	var value = ufal.utils.getCookie(cname);
    	if (value == cvalue) {
    		return true;
    	} else {
    		return false;
    	}
    },
    
    getCookie: function (cname) {
        var name = cname + "=";
        var ca = document.cookie.split(';');
        for(var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }
        return "";    	
    },

    replaced_files_and_versions: function () {
        if (jQuery("#replaced_by_alert").length > 0) {
            jQuery("#files_section").hide();
            jQuery("#replaced_by_alert").parent()
                .after(
                    '<div class="row"><span class="font_smaller col-sm-12" style="margin-top: 1em;" id="show_files_info">' + $.i18n._("autocomplete-original-data-help") + '<a href="#show-files" id="show_files_link">' + $.i18n._('autocomplete-here') + '</a>.</span></div>');
            jQuery("#show_files_link").on('click', function () {
                jQuery("#show_files_info").hide();
                jQuery("#files_section").show();
                jQuery('html, body').delay(100).animate({
                    scrollTop: jQuery("#files_section").offset().top
                }, 200);
            });
        }
        if (jQuery("#view-versions").length > 0) {
            var dropdown = jQuery("#view-versions");
            var list = jQuery("#view-versions ul.dropdown-menu")
            dropdown.on("show.bs.dropdown", function(event){
                var button = dropdown.find("button");
                var hdl = button.attr("data-handle");
                list.toggle();
                if(jQuery("#view-versions ul.dropdown-menu li").length == 0){
                   button.find("img").toggle();
                   var rest_url = ufal.utils.get_dspace_url().replace(/xmlui\/?/, 'rest');
                   jQuery.ajax(rest_url + '/handle/' + hdl)
                   .pipe(
                       function(data){
                           return jQuery.ajax(rest_url + '/items/' + data.id + '/versions');
                       })
                   .pipe(
                       function(data){
                           for(var i=0; i < data.length; i++){
                               var item = data[i];
                               var listItem = jQuery("<li>");
                               var anchor = jQuery("<a>").attr("href", "http://hdl.handle.net/" + item.handle).text(item.name).click(function(e){
                                    e.stopPropagation();
                               })
                               if(item.handle === hdl){
                                   listItem.addClass("disabled");
                                   anchor.text(" " + anchor.text());
                                   anchor.prepend(jQuery("<span class='fa fa-caret-right'> </span>"));
                               }
                               list.append(listItem.append(anchor));
                           }
                           button.find("img").toggle();
                       })
                   .pipe(null,
                       function(data){
                           console.error(data);
                       });
                }
            });
            dropdown.on("hide.bs.dropdown", function(event){
                list.toggle();
            });
        }
    }
}

//
//
//

ufal.search = {
    handle_filters: function () {
        jQuery(".selected-filter-close-icon")
            .click(
            function () {
                var filter_number = parseInt(jQuery(this).attr("filter_number")) + 1;
                jQuery("input[name='filter_" + filter_number + "'][type='text']")[0].value = "";
                jQuery("#aspect_discovery_SimpleSearch_field_submit_apply_filter").click();
            });

        jQuery(".selected-filter-clearall")
            .click(
            function () {
                jQuery("input[name^='filter_'][type='text']").each(function () {
                    this.value = "";
                });
                jQuery("#aspect_discovery_SimpleSearch_field_submit_apply_filter").click();
            });


        jQuery("select[name^='filter_relational_operator']").change(
            function () {
                var val = jQuery(this).val();
                var tb = jQuery("[name^='filter_'][type='text']", jQuery(this).parent().parent());
                if (val == "notavailable") {
                    tb.css("visibility", "hidden");
                    tb[0].value = "[* TO *]";
                } else {
                    tb[0].value = "";
                    tb.css("visibility", "visible");
                }
            });
    }
};

ufal.browse = {
    handle_date_input: function () {
        jQuery("#aspect_artifactbrowser_ConfigurableBrowse_field_month")
            .change(
            function () {
                jQuery(
                    "#aspect_artifactbrowser_ConfigurableBrowse_field_starts_with")
                    .val("");
            });
        jQuery("#aspect_artifactbrowser_ConfigurableBrowse_field_year")
            .change(
            function () {
                jQuery(
                    "#aspect_artifactbrowser_ConfigurableBrowse_field_starts_with")
                    .val("");
            });
        jQuery("#aspect_artifactbrowser_ConfigurableBrowse_field_starts_with")
            .on(
            'input',
            function () {
                if (jQuery(this).val() != "") {
                    jQuery(
                        "#aspect_artifactbrowser_ConfigurableBrowse_field_month")
                        .val("-1");
                    jQuery(
                        "#aspect_artifactbrowser_ConfigurableBrowse_field_year")
                        .val("-1");
                }
            });

    }
}

ufal.handle_interviews = function() {
    /*var rest = ufal.utils.get_dspace_url().replace(/xmlui\/?/, 'rest')
    rest = rest.endsWith("/") ? rest : rest + "/"
    rest += "handle/"
    var xhrs = [];
    jQuery("meta[name='DCTERMS.hasPart']").each(
        function(i, el){
            var part_url = jQuery(el).attr("content")
            var hdl = part_url.substring("http://hdl.handle.net/".length)
            xhrs.push(jQuery.ajax(rest + hdl + "?expand=metadata")
                .done(function(d){
                    return d
                })
                .fail(function(xhr, text_status){
                    log.error(text_status)
                })
            )
        }
    )
    var show_interview = function(dspace_item){
        //console.log(dspace_item)
        var $thumbnails = jQuery("<div class='thumbnails interviews'>")
        var $thumbnail = jQuery("<div class='thumbnail interview'>")
        var $thumb_anchor = jQuery("<a style='color:inherit; text-decoration:inherit;'>")
        $thumb_anchor.attr("href", ufal.utils.get_dspace_url() + 'handle/' +
            dspace_item.handle)
        $thumbnail.append($thumb_anchor)
        $thumbnails.append($thumbnail)
        var to_display = ["viadat.interview.identifier", "dc.language.iso", "viadat.interview.type"]
        var $dl = jQuery("<dl class='dl-horizontal'>")
        jQuery.each(to_display, function(index, element){
                var $dt = jQuery("<dt>")
                $dt.text(jQuery.i18n._(element))
                var $dd = jQuery("<dd>")
                $dd.text(dspace_item.metadata[element])
                $dl.append($dt)
                $dl.append($dd)
        })
        $thumb_anchor.append($dl)
        jQuery("#interviews").append($thumbnails)
    }

    jQuery.when.apply(jQuery, xhrs).done(function(){
        jQuery.map(arguments, function(a){
            var item = a[0]
            //FIXME ignores metadata language
            var metadata = []
            jQuery.each(item.metadata, function(index, obj){
                //FIXME Collapses repeatables
                metadata[obj.key] = obj.value
            })
            item.metadata = metadata
            return show_interview(item)
        })
    })*/

    if('narrator' === jQuery("meta[name='DC.type']").attr("content")){
        /*jQuery("#interviews").append(jQuery("<h4>").text(jQuery.i18n._("interviews.heading")))
        jQuery("#interviews").find("h4").prepend(jQuery("<i class='fa fa-microphone'>&nbsp;</i>"))*/
        var $paperclip = jQuery("#files_section h4>i")
        jQuery("#files_section h4").text(jQuery.i18n._("narrator.files")).prepend($paperclip)
        jQuery("#files_section div.thumbnail").each(function(i, el){
                var $thumbnail = jQuery(el)
                $thumbnail.find("dt:not(:first)").hide()
                $thumbnail.find("dd:not(:first)").hide()
                $thumbnail.find("a").hide()
                var $hidden = $thumbnail.find("a:hidden, dt:hidden, dd:hidden")
                var display = false
                $thumbnail.click(function(){
                        display = !display
                        $hidden.toggle(display)
                })
        })
    }
}

window.LindatRefBoxConfig ={
    rest: ufal.utils.get_dspace_url().replace(/xmlui\/?/, 'rest'),
};

